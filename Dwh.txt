import tensorflow as tf
import numpy as np
import pandas as pd


data=pd.read_csv("C:\\Users\\US\\Desktop\\diabetes.csv",header=None)


data.info()


data.describe()


data=data.astype('float')


data.head()


data=data.to_numpy()


data.shape




train = data[0:600]
test = data[600:]


train.shape



test.shape



train_feature = train[:,0:-1]
train_label = train[:,-1]
test_feature = test[:,0:-1]
test_label = test[:,-1]




train_feature.shape



train_feature.shape



train_feature[0].shape




from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Input ,Dense, Dropout




model = Sequential()
model.add(Input(shape=(5,)))
model.add(Dense(1,activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(128,activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(64,activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(1,activation='sigmoid'))




model.compile(optimizer='sgd',loss='binary_crossentropy',metrics=['accuracy'])



history = model.fit(train_feature,train_label,epochs=100,validation_data=(test_feature,test_label)) 



model.save("dia_save", save_format="h5")




import matplotlib.pyplot as plt
acc=history.history['accuracy']
val_acc=history.history['val_accuracy']
loss=history.history['loss']
val_loss=history.history['val_loss']
epochs=range(len(acc))
fig = plt.figure(figsize=(14,7))
plt.plot(epochs, acc, 'r', label="Training Accuracy")
plt.plot(epochs, val_acc, 'b', label="Validation Accuracy")
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.title('Training and validation accuracy')
plt.legend(loc='lower right')
plt.show()






fig2 = plt.figure(figsize=(14,7))
plt.plot(epochs, loss, 'r', label="Training Loss")
plt.plot(epochs, val_loss, 'b', label="Validation Loss")
plt.legend(loc='upper right')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.title('Training and validation loss')
