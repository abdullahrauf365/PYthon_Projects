# -*- coding: utf-8 -*-
"""DS Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y348miA8DiYAckCBqlxfaOmcpj99EjhE
"""

import networkx as nx
import matplotlib.pyplot as plt


G1 =nx.read_edgelist("/content/sample_data/facebook_data.txt", create_using = nx.Graph(), nodetype=int)

print(nx.info(G1))

pos = nx.spring_layout(G1)
betCent = nx.betweenness_centrality(G1, normalized=True, endpoints=True)
node_color = [20000.0 * G1.degree(v) for v in G1]
node_size =  [v * 10000 for v in betCent.values()]
plt.figure(figsize=(20,20))
nx.draw_networkx(G1, pos=pos, with_labels=False,
                 node_color=node_color,
                 node_size=node_size )
plt.axis('off')
sorted(betCent, key=betCent.get, reverse=True)[:5]

pos = nx.spring_layout(G1)
degCent = nx.degree_centrality(G1)
node_color = [20000.0 * G1.degree(v) for v in G1]
node_size =  [v * 10000 for v in degCent.values()]
plt.figure(figsize=(15,15))
nx.draw_networkx(G1, pos=pos, with_labels=False,
                 node_color=node_color,
                 node_size=node_size )
plt.axis('off')

sorted(degCent, key=degCent.get, reverse=True)[:5]

sorted(degCent, key=degCent.get, reverse=True)[:5]

pos = nx.spring_layout(G1)
cloCent = nx.closeness_centrality(G1)
node_color = [20000.0 * G1.degree(v) for v in G1]
node_size =  [v * 10000 for v in cloCent.values()]
plt.figure(figsize=(13,13))
nx.draw_networkx(G1, pos=pos, with_labels=False,
                 node_color=node_color,
                 node_size=node_size )
plt.axis('off')
sorted(cloCent, key=cloCent.get, reverse=True)[:5]

max(x for x,y in nx.degree(G1))

print(nx.clustering(G1, 56))

print(nx.clustering(G1, 2049))

print(nx.clustering(G1, 2356))

print(nx.clustering(G1, 3300))

print(nx.clustering(G1, 4031))

print(nx.average_clustering(G1))

print(nx.eccentricity(G1))